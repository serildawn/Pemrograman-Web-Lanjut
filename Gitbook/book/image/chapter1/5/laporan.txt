--1--
- app componen html
```
<!-- <app-courses></app-courses> -->
<div *ngIf="courses.length > 0">
  list of courses
</div>
<div *ngIf="courses.length == 0">
  no courses yet
</div>
<router-outlet></router-outlet>

```
- app componen ts
```
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'belajar-angular';
  courses=[1,2];
}
```
-contoh kedua menggunakan else-

-app componen html
```
<!-- <app-courses></app-courses> -->
<div *ngIf="courses.length > 0; else noCourses">
  list of courses
</div>
<ng-template #noCourses>
  no courses yet
</ng-template>

<router-outlet></router-outlet>
```
```
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'belajar-angular';
  courses=[1,2];
}
```
-cara ke 3-
-app component html
```
<!-- <app-courses></app-courses> -->
<div *ngIf="courses.length > 0; then coursesList else noCourses">

</div>
<ng-template #coursesList>
  list of courses
</ng-template>
<ng-template #noCourses>
    no courses yet
  </ng-template>

<router-outlet></router-outlet>

```
-hidden property-
-AppComponenthtml
```
<div hidden>
    list courses list
  </div>
  <div>
    no courses yet
  </div>

<router-outlet></router-outlet>
```
```
 <div [hidden]="courses.length == 0">
    list courses list
  </div>
  <div [hidden]="courses.length > 0">
    no courses yet
  </div>

<router-outlet></router-outlet>
```

```
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'belajar-angular';
  courses=[1,2];
}
```
-ngswitchcase-
-AppComponenthtml
```
 <ul class="nav nav-pills">
    <li class="nav-item">
      <a 
       (click)="viewMode = 'map'"
       class="nav-link"
       [class.active]="viewMode == 'map'"
       >Map View

      </a>
    </li>
    <li class="nav-item">
      <a 
       (click)="viewMode = 'list'"
       class="nav-link"
       [class.active]="viewMode == 'list'"
       >List View
      </a>
    </li>
  </ul>
  <div [ngSwitch]="viewMode">
    <div *ngSwitchCase="'map'">Map View Content</div>
    <div *ngSwitchCase="'list'">List View Content</div>
    <div *ngSwitchDefault>Other</div>
  </div>

<router-outlet></router-outlet>
```
```
 viewMode='map';
```

--ngFor--
```
coursesFor=[
    {id:1, name:'courses1'},
    {id:2, name:'courses2'},
    {id:3, name:'courses3'},
    {id:4, name:'courses4'},
    {id:5, name:'courses5'},
  ]
```
```
  <ul>
    <li *ngFor="let item of coursesFor; index as i">
      {{i}}-{{item.name}}
    </li>
  </ul>
<router-outlet></router-outlet>
```
--lanjutan ngFor even--
```
 <ul>
    <li *ngFor="let item of coursesFor; even as isEven">
      {{item.name}}
      <span *ngIf="isEven">(Even)</span>
    </li>
  </ul>
<router-outlet></router-outlet>
```

<!-- ngFor dan change Detection -->
<button (click)="onAdd()">add</button>
<ul>
    <li *ngFor="let item of coursesFor; even as isEven">
      {{item.name}}
      <span *ngIf="isEven">(Even)</span>
    </li>
  </ul>

```
 onAdd()
  {
    this.coursesFor.push({id:6,name:'courses6'});
  }
```


